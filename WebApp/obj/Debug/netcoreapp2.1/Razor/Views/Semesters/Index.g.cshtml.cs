#pragma checksum "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d89b01d717711b2a40ea6c124aebec5171a2eb1c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Semesters_Index), @"mvc.1.0.view", @"/Views/Semesters/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Semesters/Index.cshtml", typeof(AspNetCore.Views_Semesters_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\_ViewImports.cshtml"
using WebApp;

#line default
#line hidden
#line 2 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\_ViewImports.cshtml"
using WebApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d89b01d717711b2a40ea6c124aebec5171a2eb1c", @"/Views/Semesters/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc48f17eb9bac3476d8060730298bf398eb2fa5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Semesters_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<WebApp.Models.ViewModels.Semester>>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(55, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
            BeginContext(98, 55, true);
            WriteLiteral("\r\n<h2>Semesters</h2>\r\n\r\n<br />\r\n<div class=\"row\">\r\n    ");
            EndContext();
            BeginContext(154, 18, false);
#line 11 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
Write(ViewBag.Validation);

#line default
#line hidden
            EndContext();
            BeginContext(172, 10, true);
            WriteLiteral("\r\n</div>\r\n");
            EndContext();
            BeginContext(182, 1130, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4fa2475451f944668d526069498312e5", async() => {
                BeginContext(188, 1117, true);
                WriteLiteral(@"
    <div class=""form-row"">
        <div class=""form-group col-md-3"">
            <label for=""Name"">Name</label>
            <input type=""text"" class=""form-control is-valid"" id=""semName"" placeholder=""Name"">
            <div class=""hidden"" id=""nameVMessage"">
            </div>
        </div>
        <div class=""form-group col-md-3"">
            <label for=""StartDate"">Start Date</label>
            <input type=""date"" class=""form-control"" id=""semStartDate"" placeholder=""endDate"">
            <div class=""hidden"" id=""startDVMessage"">
            </div>
        </div>
        <div class=""form-group col-md-3"">
            <label for=""EndDate"">End Date</label>
            <input type=""date"" class=""form-control"" id=""semEndDate"" placeholder=""endDate"">
            <div class=""hidden"" id=""endDVMessage"">
            </div>
        </div>
        <div class=""form-group col-md-3"">
            <label for=""button""></label>
            <div>
                <button type=""button"" id=""create"" class=""btn btn");
                WriteLiteral("-primary mb-2\">Create new semester</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1312, 118, true);
            WriteLiteral("\r\n\r\n<br />\r\n<br />\r\n<table class=\"table\" id=\"semsGrid\">\r\n    <thead>\r\n        <tr>\r\n            <th>\r\n                ");
            EndContext();
            BeginContext(1431, 38, false);
#line 48 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Id));

#line default
#line hidden
            EndContext();
            BeginContext(1469, 55, true);
            WriteLiteral("\r\n            </th>\r\n            <th>\r\n                ");
            EndContext();
            BeginContext(1525, 40, false);
#line 51 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Name));

#line default
#line hidden
            EndContext();
            BeginContext(1565, 55, true);
            WriteLiteral("\r\n            </th>\r\n            <th>\r\n                ");
            EndContext();
            BeginContext(1621, 45, false);
#line 54 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.StartDate));

#line default
#line hidden
            EndContext();
            BeginContext(1666, 55, true);
            WriteLiteral("\r\n            </th>\r\n            <th>\r\n                ");
            EndContext();
            BeginContext(1722, 43, false);
#line 57 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.EndDate));

#line default
#line hidden
            EndContext();
            BeginContext(1765, 124, true);
            WriteLiteral("\r\n            </th>\r\n            <th>\r\n                Action\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n");
            EndContext();
#line 65 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
         foreach (var item in Model)
        {

#line default
#line hidden
            BeginContext(1938, 60, true);
            WriteLiteral("            <tr>\r\n                <td>\r\n                    ");
            EndContext();
            BeginContext(1999, 37, false);
#line 69 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Id));

#line default
#line hidden
            EndContext();
            BeginContext(2036, 67, true);
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");
            EndContext();
            BeginContext(2104, 39, false);
#line 72 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Name));

#line default
#line hidden
            EndContext();
            BeginContext(2143, 67, true);
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");
            EndContext();
            BeginContext(2211, 44, false);
#line 75 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.StartDate));

#line default
#line hidden
            EndContext();
            BeginContext(2255, 67, true);
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");
            EndContext();
            BeginContext(2323, 42, false);
#line 78 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.EndDate));

#line default
#line hidden
            EndContext();
            BeginContext(2365, 194, true);
            WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    <button type=\"button\" name=\"editBtn\" onclick=\"editBtn(this)\" class=\"btn btn-warning mb-2\">Edit</button>\r\n                    <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 2559, "\"", 2593, 2);
            WriteAttributeValue("", 2566, "/Semesters/Details/", 2566, 19, true);
#line 82 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
WriteAttributeValue("", 2585, item.Id, 2585, 8, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2594, 120, true);
            WriteLiteral(" class=\"btn btn-info\" role=\"button\">View Disciplines</a>                    \r\n                </td>\r\n            </tr>\r\n");
            EndContext();
#line 85 "C:\Users\ACER\source\repos\WebApp\WebApp\Views\Semesters\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(2725, 26, true);
            WriteLiteral("    </tbody>\r\n</table>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2768, 12542, true);
                WriteLiteral(@"
    <script type=""text/javascript"">

        var nameregex = /^[A-Z]+[a-z0-9 ]+$/;

        function nameValidation(nameVal, idMessSelector, inputIdSellector) {
            var nameMessage = """";
            $(inputIdSellector).css('border', '');
            $(idMessSelector).css('color', '');

            if (nameVal.length === 0) {
                nameMessage = ""Name is required"";
                $(idMessSelector).text(nameMessage);
                $(idMessSelector).attr('class', 'visible-lg');
                $(inputIdSellector).css('border', '2px solid #FF0000');
                $(idMessSelector).css('color', 'red');
                return false;
            }
            else {
                if (nameVal.match(nameregex)) {
                    $(idMessSelector).attr('class', 'hidden');
                    $(idMessSelector).text();
                    return true;
                }
                else {
                    nameMessage = ""Name must starts with uppercase and conta");
                WriteLiteral(@"ins at least 2 letters"";
                    $(idMessSelector).text(nameMessage);
                    $(idMessSelector).attr('class', 'visible-lg');
                    $(inputIdSellector).css('border', '2px solid #FF0000');
                    $(idMessSelector).css('color', 'red');
                    return false;
                }
            }
        }

        function startDValidation(startDVal, idMessSelector, inputIdSellector) {
            var startDMessage = """";
            $(inputIdSellector).css('border', '');
            $(idMessSelector).css('color', '');

            if (startDVal) {
                let isValid = Date.parse(startDVal)
                if (isValid) {
                    $(idMessSelector).attr('class', 'hidden');
                    $(idMessSelector).text();
                    return true;
                }
                else {
                    startDMessage = ""Invalid start date"";
                    $(idMessSelector).text(startDMessage);
         ");
                WriteLiteral(@"           $(idMessSelector).attr('class', 'visible-lg');
                    $(inputIdSellector).css('border', '2px solid #FF0000');
                    $(idMessSelector).css('color', 'red');
                    return false;
                }
            }
            else {
                startDMessage = ""Start date is required"";
                $(idMessSelector).text(startDMessage);
                $(idMessSelector).attr('class', 'visible-lg');
                $(inputIdSellector).css('border', '2px solid #FF0000');
                $(idMessSelector).css('color', 'red');
                return false;
            }
        }

        function endDValidation(endDVal, idMessSelector, inputIdSellector) {
            var endDMessage = """";
            $(inputIdSellector).css('border', '');
            $(idMessSelector).css('color', '');

            if (endDVal) {
                let isValid = Date.parse(endDVal)
                if (isValid) {
                    $(idMessSelector).attr('c");
                WriteLiteral(@"lass', 'hidden');
                    $(idMessSelector).text();
                    return true;
                }
                else {
                    endDMessage = ""Invalid end date"";
                    $(idMessSelector).text(endDMessage);
                    $(idMessSelector).attr('class', 'visible-lg');
                    $(inputIdSellector).css('border', '2px solid #FF0000');
                    $(idMessSelector).css('color', 'red');
                    return false;
                }
            } else {
                endDMessage = ""End Date is required"";
                $(idMessSelector).text(endDMessage);
                $(idMessSelector).attr('class', 'visible-lg');
                $(inputIdSellector).css('border', '2px solid #FF0000');
                $(idMessSelector).css('color', 'red');
                return false;
            }
        }

        $('#semName').on('change', function () {
            var nameVal = $(this).val();
            nameValidation(nameVal");
                WriteLiteral(@", '#nameVMessage','#semName');
        })
        $('#semStartDate').on('change', function () {
            var strDVal = $(this).val();
            startDValidation(strDVal, '#startDVMessage','#semStartDate');
        })
        $('#semEndDate').on('change', function () {
            var endDVal = $(this).val();
            endDValidation(endDVal, '#endDVMessage', '#semEndDate');
        })

        function showErrorMessages(message, messSelector, inputSellector) {
            $(inputSellector).css('border', '2px solid #FF0000');
            $(messSelector).text(message);
            $(messSelector).attr('class', 'visible-lg');
            $(messSelector).css('color', 'red');
        }



        function saveBtn(result) {
            var childrens = $(result).parent().parent().children();
            var nameinput = $(childrens[1]).children();
            var startDateinput = $(childrens[2]).children();
            var endDateinput = $(childrens[3]).children();
            var semE");
                WriteLiteral(@"ditName = $(nameinput[0]).val();
            var semEditStartDate = $(startDateinput[0]).val();
            var semEditEndDate = $(endDateinput[0]).val();

            $(nameinput[0]).on('change', function () {
                var nameVal = $(this).val();
                nameValidation(nameVal, nameinput[1], nameinput[0]);
            })
            $(startDateinput[0]).on('change', function () {
                var strDVal = $(this).val();
                startDValidation(strDVal, startDateinput[1], startDateinput[0]);
            })
            $(endDateinput[0]).on('change', function () {
                var endDVal = $(this).val();
                endDValidation(endDVal, endDateinput[1], endDateinput[0]);
            })

            var editnameValSuc = nameValidation(semEditName, nameinput[1], nameinput[0]);
            var editStartDValSuc = startDValidation(semEditStartDate, startDateinput[1], startDateinput[0]);
            var editEndDValSuc = endDValidation(semEditEndDate, endDate");
                WriteLiteral(@"input[1], endDateinput[0]);

            if (editnameValSuc && editStartDValSuc && editEndDValSuc) {
                var id = $(childrens[0]).text();
                $.ajax(
                    {
                        type: ""PUT"", //HTTP PUT Method
                        url: ""Semesters/Edit"", // Controller/View
                        data: { //Passing data
                            Id: id,
                            Name: semEditName, //Reading text box values using Jquery
                            StartDate: semEditStartDate,
                            EndDate: semEditEndDate
                        },
                        success: function (response) {
                            if (response.success) {
                                $(childrens[1]).empty()
                                    .append(`${response.result.name}`);
                                $(childrens[2]).empty()
                                    .append(`${response.result.startDate.toString()}`);
   ");
                WriteLiteral(@"                             $(childrens[3]).empty()
                                    .append(`${response.result.endDate.toString()}`);
                                $(childrens[4]).empty()
                                    .append(`<button type=""button"" onclick=""editBtn($(this))"" class=""btn btn-warning mb-2"">Edit</button>
                                   <a href=""/Semesters/Details/${id}"" class=""btn btn-info"" role=""button"">View Disciplines</a>`);
                            } else {
                                if (response.result.nameMessage) {
                                    showErrorMessages(response.result.nameMessage, nameinput[1], nameinput[0]);
                                }
                                if (response.result.startDateMessage) {
                                    showErrorMessages(response.result.startDateMessage, startDateinput[1], startDateinput[0]);
                                }
                                if (response.result.endDateMessage) ");
                WriteLiteral(@"{
                                    showErrorMessages(response.result.endDateMessage, endDateinput[1], endDateinput[0]);
                                }
                            }
                        }
                    });

            } 
        };


        function editBtn(result) {
            var childrens = $(result).parent().parent().children();
            var semId = Number($(childrens[0]).text().trim());
            var semName = $(childrens[1]).text().trim();
            var semStartDate = $(childrens[2]).text().trim();
            var semtEndDate = $(childrens[3]).text().trim();
            
            $(childrens[1]).empty()
                .append(`<input type=""text"" class=""form-control"" value=""${semName}"" id=""semNameEdit"" placeholder=""Name"">
                                <div class=""hidden"" id=""editNameVMessage""></div>`)
            $(childrens[2]).empty()
                .append(`<input type=""date"" class=""form-control"" value=""${semStartDate}"" id=""semStart");
                WriteLiteral(@"DateEdit"" placeholder=""StartDate"">
                                 <div class=""hidden"" id=""editStartDVMessage""></div>`)
            $(childrens[3]).empty()
                .append(`<input type=""date"" class=""form-control"" value=""${semtEndDate}"" id=""semEndDateEdit"" placeholder=""EndDate"">
                                 <div class=""hidden"" id=""editEndDVMessage""></div>`)
            $(childrens[4]).empty()
                .append(`<button  onclick=""saveBtn($(this))"" type=""button"" name=""saveBtn"" class=""btn btn-success mb-2"">Save</button>
                       <a href=""/Semesters/Details/${semId}"" class=""btn btn-info"" role=""button"">View Disciplines</a>`)

            var nameinput = $(childrens[1]).children();
            var startDateinput = $(childrens[2]).children();
            var endDateinput = $(childrens[3]).children();

            $(nameinput[0]).on('change', function () {
                var nameVal = $(this).val();
                nameValidation(nameVal, nameinput[1], nameinput[0]);
 ");
                WriteLiteral(@"           })
            $(startDateinput[0]).on('change', function () {
                var strDVal = $(this).val();
                startDValidation(strDVal, startDateinput[1], startDateinput[0]);
            })
            $(endDateinput[0]).on('change', function () {
                var endDVal = $(this).val();
                endDValidation(endDVal, endDateinput[1], endDateinput[0]);
            })
        };



        //$(document).ready(function () {
        $('#create').click(function (e) {
            let semName = $('#semName').val();
            let semStartDate = $('#semStartDate').val();
            let semEndDate = $('#semEndDate').val();

            var nameValSuc = nameValidation(semName, '#nameVMessage', '#semName');
            var startDValSuc = startDValidation(semStartDate, '#startDVMessage', '#semStartDate');
            var endDValSuc = endDValidation(semEndDate, '#endDVMessage', '#semEndDate');

            if (nameValSuc && startDValSuc && endDValSuc) {
    ");
                WriteLiteral(@"            $.ajax(
                    {
                        type: ""POST"", //HTTP POST Method
                        url: ""Semesters/Create"", // Controller/View
                        data: { //Passing data
                            Name: semName, //Reading text box values using Jquery
                            StartDate: semStartDate,
                            EndDate: semEndDate
                        },
                        success: function (result) {

                            $('#semsGrid > tbody:last')
                                .append(`<tr><td>${result.id}</td><td>${result.name}</td><td>${result.startDate}</td><td>${result.endDate}</td><td>
                            <button type=""button"" onclick=""editBtn(this)""   name=""editBtn"" class=""btn btn-warning mb-2"">Edit</button>
                               <a href=""/Semesters/Details/${result.id}"" class=""btn btn-info"" role=""button"">View Disciplines</a></td></tr>`);
                        }
                    });");
                WriteLiteral("\n\r\n                $(\'#semName\').val(\'\');\r\n                $(\'#semStartDate\').val(\'\');\r\n                $(\'#semEndDate\').val(\'\');\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n            //});\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<WebApp.Models.ViewModels.Semester>> Html { get; private set; }
    }
}
#pragma warning restore 1591
